version: '3.8'

services:
  iris-api:
    build: .
    container_name: iris-classifier-api
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./mlruns:/app/mlruns
      - ./mlflow.db:/app/mlflow.db
      - ./data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - MLFLOW_TRACKING_URI=sqlite:///app/mlflow.db
    restart: unless-stopped
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  mlflow:
    image: python:3.11-slim
    container_name: mlflow-server
    command: >
      bash -c "pip install mlflow==2.7.1 && 
               mlflow ui --backend-store-uri sqlite:///app/mlflow.db 
               --default-artifact-root /app/mlruns 
               --host 0.0.0.0"
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow.db:/app/mlflow.db
      - ./mlruns:/app/mlruns
    networks:
      - mlops-network
    depends_on:
      - iris-api

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - mlops-network
    depends_on:
      - iris-api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - mlops-network
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  mlops-network:
    driver: bridge